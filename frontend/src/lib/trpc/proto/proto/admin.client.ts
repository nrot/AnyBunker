// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size
// @generated from protobuf file "proto/admin.proto" (package "admin", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AdminPanel } from "./admin";
import type { IndexSearchResult } from "./index";
import type { IndexSearchRequest } from "./index";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { IndexListResponse } from "./index";
import type { IndexListRequest } from "./index";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service admin.AdminPanel
 */
export interface IAdminPanelClient {
    /**
     * @generated from protobuf rpc: GetIndexes(index.IndexListRequest) returns (index.IndexListResponse);
     */
    getIndexes(input: IndexListRequest, options?: RpcOptions): UnaryCall<IndexListRequest, IndexListResponse>;
    /**
     * @generated from protobuf rpc: Search(index.IndexSearchRequest) returns (index.IndexSearchResult);
     */
    search(input: IndexSearchRequest, options?: RpcOptions): UnaryCall<IndexSearchRequest, IndexSearchResult>;
}
/**
 * @generated from protobuf service admin.AdminPanel
 */
export class AdminPanelClient implements IAdminPanelClient, ServiceInfo {
    typeName = AdminPanel.typeName;
    methods = AdminPanel.methods;
    options = AdminPanel.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetIndexes(index.IndexListRequest) returns (index.IndexListResponse);
     */
    getIndexes(input: IndexListRequest, options?: RpcOptions): UnaryCall<IndexListRequest, IndexListResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<IndexListRequest, IndexListResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Search(index.IndexSearchRequest) returns (index.IndexSearchResult);
     */
    search(input: IndexSearchRequest, options?: RpcOptions): UnaryCall<IndexSearchRequest, IndexSearchResult> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<IndexSearchRequest, IndexSearchResult>("unary", this._transport, method, opt, input);
    }
}
