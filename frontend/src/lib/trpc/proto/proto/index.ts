// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size
// @generated from protobuf file "proto/index.proto" (package "index", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message index.Index
 */
export interface Index {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
}
/**
 * @generated from protobuf message index.IndexRow
 */
export interface IndexRow {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string date = 2;
     */
    date: string;
    /**
     * @generated from protobuf field: string data = 3;
     */
    data: string;
}
/**
 * @generated from protobuf message index.IndexListRequest
 */
export interface IndexListRequest {
}
/**
 * @generated from protobuf message index.IndexListResponse
 */
export interface IndexListResponse {
    /**
     * @generated from protobuf field: repeated index.Index indexes = 1;
     */
    indexes: Index[];
}
/**
 * @generated from protobuf message index.IndexSearchRequest
 */
export interface IndexSearchRequest {
    /**
     * @generated from protobuf field: index.Index index = 1;
     */
    index?: Index;
    /**
     * @generated from protobuf field: string from = 2;
     */
    from: string;
    /**
     * @generated from protobuf field: optional string to = 3;
     */
    to?: string;
    /**
     * @generated from protobuf field: optional uint64 take = 4;
     */
    take?: bigint;
    /**
     * @generated from protobuf field: optional uint64 skip = 5;
     */
    skip?: bigint;
    /**
     * @generated from protobuf field: optional string query = 6;
     */
    query?: string;
}
/**
 * @generated from protobuf message index.IndexSearchResult
 */
export interface IndexSearchResult {
    /**
     * @generated from protobuf field: repeated index.IndexRow response = 1;
     */
    response: IndexRow[];
}
// @generated message type with reflection information, may provide speed optimized methods
class Index$Type extends MessageType<Index> {
    constructor() {
        super("index.Index", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message index.Index
 */
export const Index = new Index$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexRow$Type extends MessageType<IndexRow> {
    constructor() {
        super("index.IndexRow", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "date", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "data", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message index.IndexRow
 */
export const IndexRow = new IndexRow$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexListRequest$Type extends MessageType<IndexListRequest> {
    constructor() {
        super("index.IndexListRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message index.IndexListRequest
 */
export const IndexListRequest = new IndexListRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexListResponse$Type extends MessageType<IndexListResponse> {
    constructor() {
        super("index.IndexListResponse", [
            { no: 1, name: "indexes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Index }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message index.IndexListResponse
 */
export const IndexListResponse = new IndexListResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexSearchRequest$Type extends MessageType<IndexSearchRequest> {
    constructor() {
        super("index.IndexSearchRequest", [
            { no: 1, name: "index", kind: "message", T: () => Index },
            { no: 2, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "to", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "take", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "skip", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "query", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message index.IndexSearchRequest
 */
export const IndexSearchRequest = new IndexSearchRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexSearchResult$Type extends MessageType<IndexSearchResult> {
    constructor() {
        super("index.IndexSearchResult", [
            { no: 1, name: "response", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => IndexRow }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message index.IndexSearchResult
 */
export const IndexSearchResult = new IndexSearchResult$Type();
